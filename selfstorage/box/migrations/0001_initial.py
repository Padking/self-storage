# Generated by Django 3.2 on 2021-11-27 15:27

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Box',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(20)], verbose_name='размер бокса в квадратных метрах')),
                ('month_rent_price', models.IntegerField(blank=True, verbose_name='стоимость аренды на месяц')),
            ],
        ),
        migrations.CreateModel(
            name='Storage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.TextField(help_text='ул. Манчестерская, д. 7, кв. 1', verbose_name='адрес')),
                ('longitude', models.FloatField(verbose_name='долгота')),
                ('latitude', models.FloatField(verbose_name='широта')),
                ('alias', models.CharField(blank=True, max_length=128, verbose_name='запоминающееся название')),
                ('first_square_meter_price', models.DecimalField(blank=True, decimal_places=2, default=599, max_digits=5, verbose_name='стоимость аренды за первый квадратный метр, руб/кв.м.')),
                ('rest_square_meters_price', models.DecimalField(blank=True, decimal_places=2, default=150, max_digits=5, verbose_name='стоимость аренды за все последующие квадратные метры кроме первого, руб/кв.м.')),
            ],
        ),
        migrations.CreateModel(
            name='Thing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='название')),
                ('image', models.ImageField(upload_to='', verbose_name='картинка')),
                ('min_storage_time', models.PositiveIntegerField(verbose_name='минимальное время хранения, сут.')),
                ('max_storage_time', models.PositiveIntegerField(verbose_name='максимальное время хранения, сут.')),
                ('storage_cost', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='стоимость за минимальное время хранения')),
            ],
        ),
        migrations.CreateModel(
            name='SeasonalKeepingOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('things_names', models.CharField(max_length=200, verbose_name='названия вещей')),
                ('number_of_things', models.PositiveIntegerField(default=1, verbose_name='кол-во единиц вещей')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='seasonal_keeping_orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BoxOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('box_rent_term', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(12)], verbose_name='срок аренды бокса')),
                ('box', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='orders', to='box.box')),
                ('tenant', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='box_orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='box',
            name='storage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='boxes', to='box.storage'),
        ),
        migrations.AddField(
            model_name='box',
            name='things',
            field=models.ManyToManyField(blank=True, related_name='assosiated_boxes', to='box.Thing'),
        ),
    ]
